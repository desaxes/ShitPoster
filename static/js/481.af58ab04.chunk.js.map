{"version":3,"file":"static/js/481.af58ab04.chunk.js","mappings":"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","sources":["webpack://first_project/./src/components/login/login.module.css?e6ba","components/login/login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"login_form__8U9Rd\",\"input_box\":\"login_input_box__MuCrL\",\"field\":\"login_field__q6R7o\",\"btn_box\":\"login_btn_box__NrBCx\",\"link\":\"login_link__Us2zB\",\"reg\":\"login_reg__TO1BC\",\"error\":\"login_error__K2dRR\",\"field_border\":\"login_field_border__oGqjT\",\"checkbox_box\":\"login_checkbox_box__oC+r3\",\"remember\":\"login_remember__f3Jvp\",\"checkbox\":\"login_checkbox__3gqZM\",\"card_header\":\"login_card_header__5Unb0\",\"card_data\":\"login_card_data__0nYv6\",\"captcha_box\":\"login_captcha_box__u4Q76\",\"captcha\":\"login_captcha__jB2GN\"};","import React from 'react'\r\nimport s from \"./login.module.css\"\r\nimport { Navigate } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Checkbox, HoverCard, PasswordInput, TextInput, Tooltip } from '@mantine/core'\r\nimport { IconAlertCircle } from '@tabler/icons-react'\r\nimport * as authSelectors from \"../../redux/auth-selectors\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { AppDispatch } from '../../redux/redux-store'\r\n\r\ntype FormValues = {\r\n    email: string\r\n    password: string\r\n    checkbox: boolean\r\n    captcha: string\r\n}\r\n\r\nconst LoginPage: React.FC = () => {\r\n    const id = useSelector(authSelectors.getAuthId)\r\n    const isAuth = useSelector(authSelectors.getIsAuth)\r\n    const authError = useSelector(authSelectors.getAuthError)\r\n    const captchaUrl = useSelector(authSelectors.getCaptchaUrl)\r\n    const dispatch: AppDispatch = useDispatch()\r\n    \r\n    const { register, handleSubmit, formState: { errors } } = useForm<FormValues>({ mode: 'onBlur' });\r\n    let onSubmit = (e: any) => {\r\n        dispatch(login(e.email, e.password, e.checkbox, e.captcha))\r\n    }\r\n    if (isAuth === false) {\r\n        return (\r\n            <div className={s.subs}>\r\n                <div className='page-block'>\r\n                    <div className={s.page_inner}>\r\n                        <HoverCard width={280}>\r\n                            <HoverCard.Target>\r\n                                <form onSubmit={handleSubmit(onSubmit)} className={s.form} action=\"\">\r\n                                    <h1>Authorization</h1>\r\n                                    <div className={s.input_box}>\r\n                                        <TextInput type='email' size='lg' radius='md' icon='@' {...register(\"email\", { required: \"✎ Enter your Email!\" })}\r\n                                            placeholder={'Email'} className={`${s.field} ${errors?.email && s.field_border}`}\r\n                                            rightSection={\r\n                                                <Tooltip label=\"Incorrect Email\" position=\"top-end\" withArrow>\r\n                                                    <div>\r\n                                                        {errors?.email && <IconAlertCircle color='red' size=\"1rem\" style={{ display: 'block', opacity: 0.5 }} />}\r\n                                                    </div>\r\n                                                </Tooltip>} />\r\n                                    </div>\r\n                                    <div className={s.input_box}>\r\n                                        <PasswordInput size='lg' radius='md' icon=\"*\" {...register(\"password\", { required: \"✎ Enter your Password! \" })}\r\n                                            placeholder={'Password'} className={`${s.field} ${errors?.password && s.field_border}`}\r\n                                        />\r\n                                    </div>\r\n                                    <Checkbox color='indigo' radius='lg' size='md' label='Remember Me' {...register(\"checkbox\")} className={s.checkbox_box}>\r\n                                        {/* <input type='checkbox' {...register(\"checkbox\")}\r\n                                className={s.checkbox} /> */}\r\n                                    </Checkbox>\r\n                                    {captchaUrl != null &&\r\n                                        <div className={s.captcha_box}>\r\n                                            <img className={s.captcha} src={captchaUrl} alt=\"\" />\r\n                                            <TextInput className={`${s.field} ${errors?.captcha && s.field_border}`} type=\"text\" {...register(\"captcha\", { required: \"✎ Enter Symbols!\" })} />\r\n                                        </div>\r\n                                    }\r\n                                    <div className={s.btn_box}>\r\n                                        {authError &&\r\n                                            <div>\r\n                                                <p className={s.error}>Something is Wrong</p>\r\n                                            </div>\r\n                                        }\r\n                                        <input value={'Confirm'} type=\"submit\" className='quick-posting__btn' />\r\n                                    </div>\r\n                                </form>\r\n                            </HoverCard.Target>\r\n                            <HoverCard.Dropdown m={20}>\r\n                                <p className={s.card_header}>\r\n                                    \"Test Account\"\r\n                                    <p className={s.card_data}>\r\n                                        Email: free@samuraijs.com\r\n                                    </p>\r\n                                    <p className={s.card_data}>\r\n                                        Password: free\r\n                                    </p>\r\n                                </p>\r\n                            </HoverCard.Dropdown>\r\n                        </HoverCard>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Navigate to={\"/ShitPoster/profile/\" + id} />\r\n        )\r\n    }\r\n}\r\nexport default LoginPage"],"names":["id","useSelector","authSelectors","isAuth","authError","captchaUrl","dispatch","useDispatch","_useForm","useForm","mode","register","handleSubmit","errors","formState","_jsx","className","s","children","_jsxs","HoverCard","width","onSubmit","e","login","email","password","checkbox","captcha","action","TextInput","_objectSpread","type","size","radius","icon","required","placeholder","concat","rightSection","Tooltip","label","position","withArrow","IconAlertCircle","color","style","display","opacity","PasswordInput","Checkbox","src","alt","value","m","Navigate","to"],"sourceRoot":""}