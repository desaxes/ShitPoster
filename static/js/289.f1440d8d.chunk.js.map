{"version":3,"file":"static/js/289.f1440d8d.chunk.js","mappings":"wMAKMA,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,OAE3B,EAIME,EAAe,SAACC,GAClB,OAAOC,EAAAA,EAAAA,IAAQN,EAARM,EAAyB,SAAUC,GACtC,OAAqB,IAAjBA,EAAML,QACCM,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,YAEVF,EAAAA,EAAAA,KAACH,GAASM,EAAAA,EAAAA,GAAA,GAAKJ,GACjC,GAEJ,C,iFCpBA,GAAgB,WAAa,yBAAyB,aAAe,2BAA2B,OAAS,qBAAqB,SAAW,uBAAuB,IAAM,kBAAkB,SAAW,uBAAuB,OAAS,qBAAqB,KAAO,mBAAmB,MAAQ,oBAAoB,KAAO,mBAAmB,QAAU,sBAAsB,QAAU,sBAAsB,WAAa,yBAAyB,KAAO,mBAAmB,QAAU,sBAAsB,MAAQ,qB,qECgB1eK,EAA2B,SAACL,GAC9B,IAAMM,GAAuBC,EAAAA,EAAAA,MAS7B,OACIC,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAAA,IAAMC,SAAA,EACjBH,EAAAA,EAAAA,MAACI,EAAAA,GAAO,CAACC,QANI,SAACC,GAClBC,EAAAA,EAAAA,IAAU,uDAAyDf,EAAMgB,GAAI,CAAEC,iBAAiB,IAAQC,MAAK,SAAAC,GAC7G,GACJ,EAG0ChB,GAAI,YAAcH,EAAMgB,GAAIP,UAAWC,EAAAA,SAAWC,SAAA,EAChFV,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAAA,OAAUU,IAAsB,OAAjBpB,EAAMqB,OAAkBA,EAASrB,EAAMqB,OAAQC,IAAI,MAClFd,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,KAAOC,SAAA,EACnBV,EAAAA,EAAAA,KAAA,KAAGQ,UAAWC,EAAAA,MAAQC,SAAEX,EAAMuB,QAC9BtB,EAAAA,EAAAA,KAAA,KAAGQ,UAAWC,EAAAA,KAAOC,SAAmB,OAAjBX,EAAMwB,OAAkB,YAAcxB,EAAMwB,gBAG3EvB,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAAA,QAAUC,UACtBV,EAAAA,EAAAA,KAAA,UAAQwB,SAAUzB,EAAM0B,kBAAkBC,MAAK,SAAAX,GAAE,OAAIA,IAAOhB,EAAMgB,EAAE,IAAGH,QAlBlE,SAACC,GACdA,EAAEc,iBACFtB,GAASuB,EAAAA,EAAAA,IAAU7B,EAAM8B,SAAU9B,EAAMgB,IAC7C,EAewGP,UAAc,qBAAoBsB,OAAA,IAAI/B,EAAM8B,UAAYpB,EAAAA,SAAYC,SAC3JX,EAAM8B,SAAW,cAAgB,kBAKtD,E,6GC3BME,EAAqBC,EAAAA,MAAW,WAClC,IAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAQF,EAAAA,EAAAA,IAAYC,EAAAA,IACpBE,GAAWH,EAAAA,EAAAA,IAAYC,EAAAA,IACvBG,GAAaJ,EAAAA,EAAAA,IAAYC,EAAAA,IACzBV,GAAoBS,EAAAA,EAAAA,IAAYC,EAAAA,IAChCI,GAAgBL,EAAAA,EAAAA,IAAYM,EAAAA,IAC5BnC,GAAwBC,EAAAA,EAAAA,MAE9BmC,GAA+BC,EAAAA,EAAAA,MAA2CC,EAAAF,EAApEG,KAAAA,OAAI,IAAAD,EAAG,GAAEA,EAAAE,EAAAJ,EAAEK,KAAAA,OAAI,IAAAD,EAAG,GAAEA,EAC1BE,GAAsCC,EAAAA,EAAAA,GAAkBF,EAAM,KAAIG,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3DI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,IAElCI,EAAAA,EAAAA,YAAU,WACFF,IAAgBL,GAChBzC,GAASiD,EAAAA,EAAAA,IAASjB,EAAUkB,SAASX,GAAOE,IAC5CU,EAAS,SAAWZ,EAAO,IAAME,KAGjCA,EAAOK,EACP9C,GAASiD,EAAAA,EAAAA,IAASjB,EAAU,EAAGS,IAC/BU,EAAS,WAAqBV,GAEtC,GAAG,CAACK,EAAaP,IAEjB,IAGMY,GAAWC,EAAAA,EAAAA,MAEbC,EAAOtB,EAAMuB,KAAI,SAAAC,GAAC,OAAI5D,EAAAA,EAAAA,KAACI,EAAG,CAAYW,GAAI6C,EAAE7C,GAAIO,KAAMsC,EAAEtC,KAAMC,OAAQqC,EAAErC,OACxEM,SAAU+B,EAAE/B,SAAUT,OAAQwC,EAAEC,OAAOC,MAAOrC,kBAAmBA,GADjCmC,EAAE7C,GAEpC,IACEgD,EAAWxB,EAAcoB,KAAI,SAAAC,GAAC,OAAI5D,EAAAA,EAAAA,KAACI,EAAG,CAAYW,GAAI6C,EAAE7C,GAAIO,KAAMsC,EAAEtC,KAAMC,OAAQqC,EAAErC,OACpFM,SAAU+B,EAAE/B,SAAUT,OAAQwC,EAAEC,OAAOC,MAAOrC,kBAAmBA,GADrBmC,EAAE7C,GAEhD,IAEEiD,EAAYC,KAAKC,KAAKjC,EAAaI,GAEvC,OACIrC,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAAA,KAAOC,UACnBV,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,aAAYE,UACvBV,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAAA,WAAaC,UACzBH,EAAAA,EAAAA,MAAC4D,EAAAA,EAAI,CAACC,aAAa,QAAO1D,SAAA,EACtBH,EAAAA,EAAAA,MAAC4D,EAAAA,EAAAA,KAAS,CAACE,MAAI,EAAA3D,SAAA,EACXV,EAAAA,EAAAA,KAACmE,EAAAA,EAAAA,IAAQ,CAACG,MAAM,QAAO5D,SAAC,WACxBV,EAAAA,EAAAA,KAACmE,EAAAA,EAAAA,IAAQ,CAACG,MAAM,OAAM5D,SAAC,YAE1B4B,GAAatC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,IAAM,MAC9BvE,EAAAA,EAAAA,KAACmE,EAAAA,EAAAA,MAAU,CAACK,GAAI,EAAGC,GAAI,GAAIH,MAAM,QAAO5D,UACpCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,MAAQC,SAAA,EACpBV,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAAA,WAChBT,EAAAA,EAAAA,KAAC0E,EAAAA,EAAS,CAACC,KAAK,KAAKP,aAAcjB,EAAa3C,UAAWC,EAAAA,OAAUmE,KAAK,OACtEC,YAAY,SAASC,SAAU,SAACjE,GAAC,OAAKuC,EAAevC,EAAEkE,cAAcT,MAAM,KAC/EtE,EAAAA,EAAAA,KAACgF,EAAAA,EAAI,CAACC,IAAK,GAAIC,UAAW,SAAU1E,UAAS,GAAAsB,OAAKrB,EAAAA,SAAU,KAAAqB,OAAIQ,GAAc7B,EAAAA,cAAiBC,SAC1FgD,KAEL1D,EAAAA,EAAAA,KAACmF,EAAAA,EAAU,CAACC,MAAM,MAAMd,MAAOf,SAASX,GAAOkC,SAAU,SAACjE,IAhCnE,SAACA,GAChB2C,EAAS,SAAW3C,EAAI,IAAMiC,EAClC,CA8B8FuC,CAAWxE,EAAG,EAC5EyE,MAAOtB,EAAWuB,WAAS,EAACC,SAAU,EAAGhF,UAAWC,EAAAA,QAAWkE,KAAK,aAIhF3E,EAAAA,EAAAA,KAACmE,EAAAA,EAAAA,MAAU,CAACM,GAAI,GAAIH,MAAM,OAAM5D,UAC5BV,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAAA,MAAQC,UACpBV,EAAAA,EAAAA,KAACgF,EAAAA,EAAI,CAACC,IAAK,GAAIC,UAAW,SAAU1E,UAAS,GAAAsB,OAAKrB,EAAAA,SAAU,KAAAqB,OAAIQ,GAAc7B,EAAAA,cAAiBC,SAC1FqD,gBASrC,IACA,GAAe0B,EAAAA,EAAAA,IACX7F,EAAAA,EADJ,CAEEmC,E,wJC1FK,IAAM2D,EAAc,SAACjG,GACxB,OAAQA,EAAME,KAAKoE,QACvB,EAIa4B,EAAY,SAAClG,GACtB,OAAQA,EAAME,KAAKD,MACvB,EACakG,EAAY,SAACnG,GACtB,OAAQA,EAAME,KAAKoB,EACvB,EAIa8E,EAAe,SAACpG,GACzB,OAAQA,EAAME,KAAKmG,SACvB,EACaC,EAAgB,SAACtG,GAC1B,OAAQA,EAAME,KAAKqG,UACvB,C,wJCpBO,IAAMC,EAAgB,SAACxG,GAC1B,OAAQA,EAAMyG,SAASC,QAC3B,EACaC,EAAc,SAAC3G,GACxB,OAAQA,EAAMyG,SAAS7D,QAC3B,EACagE,EAAgB,SAAC5G,GAC1B,OAAQA,EAAMyG,SAASjE,UAC3B,EACaqE,EAAgB,SAAC7G,GAC1B,OAAQA,EAAMyG,SAAS5D,UAC3B,EACaiE,EAAuB,SAAC9G,GACjC,OAAQA,EAAMyG,SAASzE,iBAC3B,C","sources":["components/common_components/hoc-components.tsx","webpack://first_project/./src/components/subs/subs.module.css?e655","components/subs/sub.tsx","components/subs/subs.tsx","redux/auth-selectors.ts","redux/subs-selectors.ts"],"sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { appStateType } from '../../redux/redux-store'\r\n\r\nconst mapStateToProps = (state: appStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\ntype props = {\r\n    isAuth: boolean\r\n}\r\nconst AuthRedirect = (Component: React.ComponentType<props>) => {\r\n    return connect(mapStateToProps)(function (props: props) {\r\n        if (props.isAuth === false) {\r\n            return <Navigate to='/login' />\r\n        }\r\n        else { return <Component {...props} /> }\r\n    }\r\n    )\r\n}\r\nexport { AuthRedirect }","// extracted by mini-css-extract-plugin\nexport default {\"page_inner\":\"subs_page_inner__xMU0l\",\"page_opacity\":\"subs_page_opacity__kFPIH\",\"search\":\"subs_search__ndvyH\",\"sub_list\":\"subs_sub_list__ki3ru\",\"sub\":\"subs_sub__y-NoG\",\"link_box\":\"subs_link_box__wtV+e\",\"avatar\":\"subs_avatar__kW4h-\",\"text\":\"subs_text__kY2O8\",\"title\":\"subs_title__OUaxr\",\"desc\":\"subs_desc__H5Vy3\",\"btn_box\":\"subs_btn_box__tvCJU\",\"counter\":\"subs_counter__flTbw\",\"pageNumber\":\"subs_pageNumber__WyQQk\",\"spin\":\"subs_spin__rjrTT\",\"f_color\":\"subs_f_color__opCdw\",\"panel\":\"subs_panel__79zrS\"};","import React from 'react';\r\nimport s from './subs.module.css'\r\nimport avatar from './../../img/shit_icon.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { following } from '../../redux/subs-reducer'\r\nimport { useDispatch } from 'react-redux';\r\nimport { AppDispatch } from '../../redux/redux-store';\r\ntype propsType = {\r\n    key: number\r\n    id: number\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    avatar: string\r\n    subscribeProgress: number[]\r\n}\r\nconst Sub: React.FC<propsType> = (props) => {\r\n    const dispatch:AppDispatch = useDispatch()\r\n    let onSubClick = (e: any) => {\r\n        e.preventDefault();\r\n        dispatch(following(props.followed, props.id))\r\n    }\r\n    let setProfileInfo = (e: any) => {\r\n        axios.get(\"https://social-network.samuraijs.com/api/1.0/follow/\" + props.id, { withCredentials: true }).then(response => {\r\n        })\r\n    }\r\n    return (\r\n        <li className={s.sub}>\r\n            <NavLink onClick={setProfileInfo} to={'/profile/' + props.id} className={s.link_box}>\r\n                <img className={s.avatar} src={props.avatar === null ? avatar : props.avatar} alt=\"\" />\r\n                <div className={s.text}>\r\n                    <p className={s.title}>{props.name}</p>\r\n                    <p className={s.desc}>{props.status === null ? \"No Status\" : props.status}</p>\r\n                </div>\r\n            </NavLink>\r\n            <div className={s.btn_box}>\r\n                <button disabled={props.subscribeProgress.some(id => id === props.id)} onClick={onSubClick} className={`${'quick-posting__btn'} ${props.followed && s.f_color}`}>\r\n                    {props.followed ? 'Unsubscribe' : 'Subscribe'}\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\nexport { Sub }","import s from './subs.module.css'\r\nimport { Sub } from './sub'\r\nimport React, { useEffect } from 'react'\r\nimport { Preloader } from '../common_components/preloader'\r\nimport { Flex, Pagination } from '@mantine/core'\r\nimport { Tabs, TextInput } from '@mantine/core';\r\nimport { useDebouncedState } from \"@mantine/hooks\";\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as subSelectors from \"../../redux/subs-selectors\";\r\nimport * as authSelectors from \"../../redux/auth-selectors\";\r\nimport { getUsers } from '../../redux/subs-reducer'\r\nimport { AppDispatch } from '../../redux/redux-store'\r\nimport { AuthRedirect } from '../common_components/hoc-components'\r\nimport { compose } from 'redux'\r\n\r\nconst SubsPage: React.FC = React.memo(() => {\r\n    const totalCount = useSelector(subSelectors.getTotalCount)\r\n    const users = useSelector(subSelectors.getUsersArray)\r\n    const pageSize = useSelector(subSelectors.getPageSize)\r\n    const isFetching = useSelector(subSelectors.getIsFetching)\r\n    const subscribeProgress = useSelector(subSelectors.getSubscribeProgress)\r\n    const subUsersArray = useSelector(authSelectors.getSubUsers)\r\n    const dispatch: AppDispatch = useDispatch()\r\n\r\n    let { page = '', term = '' } = useParams<{ page: string, term: string }>()\r\n    const [searchValue, setSearchValue] = useDebouncedState(term, 500)\r\n\r\n    useEffect(() => {\r\n        if (searchValue === term) {\r\n            dispatch(getUsers(pageSize, parseInt(page), term))\r\n            navigate('/subs/' + page + \"/\" + term)\r\n        }\r\n        else {\r\n            term = searchValue\r\n            dispatch(getUsers(pageSize, 1, term))\r\n            navigate('/subs/' + 1 + \"/\" + term)\r\n        }\r\n    }, [searchValue, page])\r\n\r\n    const changePage = (e: number) => {\r\n        navigate('/subs/' + e + \"/\" + term)\r\n    }\r\n    const navigate = useNavigate()\r\n\r\n    let subs = users.map(p => <Sub key={p.id} id={p.id} name={p.name} status={p.status}\r\n        followed={p.followed} avatar={p.photos.small} subscribeProgress={subscribeProgress}\r\n    />)\r\n    let subUsers = subUsersArray.map(p => <Sub key={p.id} id={p.id} name={p.name} status={p.status}\r\n        followed={p.followed} avatar={p.photos.small} subscribeProgress={subscribeProgress}\r\n    />)\r\n\r\n    let pageCount = Math.ceil(totalCount / pageSize);\r\n\r\n    return (\r\n        <div className={s.subs}>\r\n            <div className='page-block'>\r\n                <div className={s.page_inner}>\r\n                    <Tabs defaultValue='Users' >\r\n                        <Tabs.List grow>\r\n                            <Tabs.Tab value='Users'>Users</Tabs.Tab>\r\n                            <Tabs.Tab value='Subs'>Subs</Tabs.Tab>\r\n                        </Tabs.List>\r\n                        {isFetching ? <Preloader /> : null}\r\n                        <Tabs.Panel mt={0} pt={30} value='Users'>\r\n                            <div className={s.panel}>\r\n                                <div className={s.btn_box}></div>\r\n                                <TextInput size='lg' defaultValue={searchValue} className={s.search} type=\"text\"\r\n                                    placeholder='Search' onChange={(e) => setSearchValue(e.currentTarget.value)} />\r\n                                <Flex gap={16} direction={'column'} className={`${s.sub_list} ${isFetching && s.page_opacity}`}>\r\n                                    {subs}\r\n                                </Flex>\r\n                                <Pagination color='red' value={parseInt(page)} onChange={(e) => { changePage(e) }}\r\n                                    total={pageCount} withEdges siblings={3} className={s.counter} size=\"lg\">\r\n                                </Pagination>\r\n                            </div>\r\n                        </Tabs.Panel>\r\n                        <Tabs.Panel pt={30} value='Subs'>\r\n                            <div className={s.panel}>\r\n                                <Flex gap={16} direction={'column'} className={`${s.sub_list} ${isFetching && s.page_opacity}`}>\r\n                                    {subUsers}\r\n                                </Flex>\r\n                            </div>\r\n                        </Tabs.Panel>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nexport default compose<React.FC>(\r\n    AuthRedirect\r\n)(SubsPage)","import { appStateType } from \"./redux-store\"\r\n\r\nexport const getSubUsers = (state: appStateType) => {\r\n    return (state.auth.subUsers)\r\n}\r\nexport const getLikedPosts = (state: appStateType) => {\r\n    return (state.auth.likedPosts)\r\n}\r\nexport const getIsAuth = (state: appStateType) => {\r\n    return (state.auth.isAuth)\r\n}\r\nexport const getAuthId = (state: appStateType) => {\r\n    return (state.auth.id)\r\n}\r\nexport const getLogin = (state: appStateType) => {\r\n    return (state.auth.login)\r\n}\r\nexport const getAuthError = (state: appStateType) => {\r\n    return (state.auth.authError)\r\n}\r\nexport const getCaptchaUrl = (state: appStateType) => {\r\n    return (state.auth.captchaUrl)\r\n}\r\n","import { appStateType } from \"./redux-store\"\r\n\r\nexport const getUsersArray = (state: appStateType) => {\r\n    return (state.subsPage.subsData)\r\n}\r\nexport const getPageSize = (state: appStateType) => {\r\n    return (state.subsPage.pageSize)\r\n}\r\nexport const getTotalCount = (state: appStateType) => {\r\n    return (state.subsPage.totalCount)\r\n}\r\nexport const getIsFetching = (state: appStateType) => {\r\n    return (state.subsPage.isFetching)\r\n}\r\nexport const getSubscribeProgress = (state: appStateType) => {\r\n    return (state.subsPage.subscribeProgress)\r\n}"],"names":["mapStateToProps","state","isAuth","auth","AuthRedirect","Component","connect","props","_jsx","Navigate","to","_objectSpread","Sub","dispatch","useDispatch","_jsxs","className","s","children","NavLink","onClick","e","axios","id","withCredentials","then","response","src","avatar","alt","name","status","disabled","subscribeProgress","some","preventDefault","following","followed","concat","SubsPage","React","totalCount","useSelector","subSelectors","users","pageSize","isFetching","subUsersArray","authSelectors","_useParams","useParams","_useParams$page","page","_useParams$term","term","_useDebouncedState","useDebouncedState","_useDebouncedState2","_slicedToArray","searchValue","setSearchValue","useEffect","getUsers","parseInt","navigate","useNavigate","subs","map","p","photos","small","subUsers","pageCount","Math","ceil","Tabs","defaultValue","grow","value","Preloader","mt","pt","TextInput","size","type","placeholder","onChange","currentTarget","Flex","gap","direction","Pagination","color","changePage","total","withEdges","siblings","compose","getSubUsers","getIsAuth","getAuthId","getAuthError","authError","getCaptchaUrl","captchaUrl","getUsersArray","subsPage","subsData","getPageSize","getTotalCount","getIsFetching","getSubscribeProgress"],"sourceRoot":""}