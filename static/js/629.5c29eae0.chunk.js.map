{"version":3,"file":"static/js/629.5c29eae0.chunk.js","mappings":"+OAIMA,EAAkB,SAACC,GACrB,MAAO,CACHC,KAAMD,EAAMC,KAEpB,EAEMC,EAAe,SAACC,GAClB,OAAOC,EAAAA,EAAAA,IAAQL,EAARK,CAAwB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAC,EAAAF,GAAA,IAAAG,GAAAC,EAAAA,EAAAA,GAAAF,GAAA,SAAAA,IAAA,OAAAG,EAAAA,EAAAA,GAAC,KAADH,GAAAC,EAAAG,MAAC,KAADC,UAAA,CAM1B,OAN0BC,EAAAA,EAAAA,GAAAN,EAAA,EAAAO,IAAA,SAAAC,MAC3B,WACI,OAA+B,IAA3BC,KAAKC,MAAMhB,KAAKiB,QACTC,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,YAEVF,EAAAA,EAAAA,KAAChB,GAASmB,EAAAA,EAAAA,GAAA,GAAKN,KAAKC,OACtC,KAACV,CAAA,CAN0B,CAAegB,EAAAA,WAQlD,C,6FC+CMC,GAAgBpB,EAAAA,EAAAA,KANE,SAACJ,GACrB,MAAO,CACHyB,SAAUzB,EAAMC,KAAKyB,WACrBR,OAAQlB,EAAMC,KAAKiB,OAE3B,GAC+C,CAAES,SAAAA,EAAAA,GAAUC,cAAAA,EAAAA,GAAeC,KAAAA,EAAAA,IAApDzB,EA5DT,SAACa,GACV,IAAMa,GAAWC,EAAAA,EAAAA,MACXC,EAAe,WACjBF,EAAS,SAAWb,EAAMgB,GAC9B,EAOA,OACId,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAAA,KAAOC,UACnBC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,EAAAA,MAAQC,SAAA,EACpBC,EAAAA,EAAAA,MAAA,OAAKC,QAASN,EAAcE,UAAWC,EAAAA,EAAAA,OAASC,SAAA,EAC5CjB,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAAA,OAASC,UACrBjB,EAAAA,EAAAA,KAAA,OAAKoB,IAAKtB,EAAMuB,OAAQC,IAAI,QAEhCtB,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAAA,KAAOC,SAClBnB,EAAMyB,QAEXvB,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAAA,KAAOC,SAClBnB,EAAM0B,WAGfxB,EAAAA,EAAAA,KAAA,OAAKmB,QAASN,EAAcE,UAAWC,EAAAA,EAAAA,WAAaC,UAChDjB,EAAAA,EAAAA,KAAA,OAAKoB,IAAKtB,EAAM2B,UAAWH,IAAI,QAEnCtB,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAAA,WAAaC,UACzBjB,EAAAA,EAAAA,KAAA,KAAAiB,SAAInB,EAAM4B,cAEdR,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,EAAAA,OAASC,SAAA,EACrBC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,EAAAA,WAAaC,SAAA,EACzBjB,EAAAA,EAAAA,KAAA,UAAQmB,QAASN,EAAcE,UAAWC,EAAAA,EAAAA,SAAWC,UACjDjB,EAAAA,EAAAA,KAAA,OAAKoB,IAAKO,EAASL,IAAI,QAE3BtB,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAAA,iBAAmBC,SAC9BnB,EAAM8B,SAASC,aAGxBX,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,EAAAA,YAAcC,SAAA,EAC1BjB,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAAA,wBAA0BC,SACrCnB,EAAMgC,cAEX9B,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAAA,KAAOC,UACnBjB,EAAAA,EAAAA,KAAA,UAAQ+B,SAAUjC,EAAMQ,SAAS0B,MAAK,SAAAlB,GAAE,OAAIA,IAAOhB,EAAMgB,EAAE,IAAGK,QAxCrE,YACQ,IAAjBrB,EAAMC,SACND,EAAMY,KAAKZ,EAAMgB,IACjBhB,EAAMW,cAAcX,EAAMgB,IAElC,EAoCwBC,UAAS,GAAAkB,OAAKjB,EAAAA,EAAAA,SAAU,KAAAiB,OAAInC,EAAMQ,SAAS0B,MAAK,SAAAlB,GAAE,OAAIA,IAAOhB,EAAMgB,EAAE,KAAKhB,EAAMC,QAAUiB,EAAAA,EAAAA,OAAUC,SAAC,uBAOjI,IAQA,K,mIChEaiB,EAAiB,SAACrD,GAC3B,OAAQA,EAAMsD,YAAYC,WAC9B,EACaC,EAAY,SAACxD,GACtB,OAAQA,EAAMsD,YAAYG,MAC9B,EACaC,EAAY,SAAC1D,GACtB,OAAQA,EAAMsD,YAAYK,MAC9B,E,mGCVA,GAAgB,OAAS,wBAAwB,WAAa,4BAA4B,WAAa,4BAA4B,OAAS,wBAAwB,SAAW,0BAA0B,KAAO,sBAAsB,WAAa,4BAA4B,SAAW,0BAA0B,OAAS,wBAAwB,UAAY,2BAA2B,QAAU,yBAAyB,aAAe,8BAA8B,aAAe,8BAA8B,WAAa,4BAA4B,MAAQ,uBAAuB,MAAQ,wB,sJC2CzkB,EAvCsB,SAAC1C,GAEnB,IAAA2C,GAA4BC,EAAAA,EAAAA,MAApBC,EAAQF,EAARE,SAAUC,EAAKH,EAALG,MAClBC,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAoCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAI1BG,EAAc,SAACC,GACjBF,EAAcE,EAClB,EASA,OACItC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,aAAeC,SAAA,CACzBgC,GAIEjD,EAAAA,EAAAA,KAAA,QAAAiB,UACIjB,EAAAA,EAAAA,KAAA,SAAAG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWwC,EAAS,WAAS,IAAEc,WAAS,EAACC,OAZ9B,SAACC,GACxBT,GAAY,GACZpD,EAAM8D,UAAU9D,EAAM+D,OAAQF,EAAEG,cAAclE,OAC9CgD,GACJ,EAQqFmB,UAAW,GAAIhD,UAAWC,EAAAA,aAAgBgD,YAAalE,EAAM0C,aAJtIxC,EAAAA,EAAAA,KAAA,OAAAiB,UACIjB,EAAAA,EAAAA,KAAA,KAAAiB,SAAInB,EAAM0C,WAMjB1C,EAAMmE,YAAcnE,EAAM+D,SAAU7D,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,WAAaC,UAC9DjB,EAAAA,EAAAA,KAAA,OAAKmB,QAnBQ,SAACwC,GACtBT,GAAY,EAChB,EAkBgBgB,aAAc,SAACP,GAAQJ,GAAY,EAAO,EAAGY,aAAc,SAACR,GAAQJ,GAAY,EAAM,EACtFnC,IAAKiC,EAAae,EAAcC,EAChC/C,IAAI,SAIxB,E,oBC4DA,EA5FgB,SAACxB,GAOb,IAPwB,IAADwE,EACvB7B,GAAiEC,EAAAA,EAAAA,IAAQ,CAAEc,KAAM,aAAzEb,EAAQF,EAARE,SAAU4B,EAAY9B,EAAZ8B,aAAc3B,EAAKH,EAALG,MAAoB4B,EAAM/B,EAAnBgC,UAAaD,OAIhDE,GAHQC,EAAAA,EAAAA,GAAI7E,EAAM8E,OAAOC,UAAUC,KAAI,SAAAC,GAAC,OAAIA,EAAEzC,SAAWxC,EAAMsC,YAAYE,SAAUtC,EAAAA,EAAAA,KAACgF,EAAAA,EAAI,CAACC,OAAQF,EAAEzC,OAAmBxB,GAAIiE,EAAEjE,GAAIS,KAAMwD,EAAExD,KAAMF,OAAQ0D,EAAE1D,OAAQG,KAAMuD,EAAEvD,KAC1KC,UAAWsD,EAAEtD,UAAWC,SAAUqD,EAAErD,SAAUI,WAAYiD,EAAEjD,WAAYF,SAAUmD,EAAEnD,UAD8BmD,EAAEjE,GACpB,IAE1EoE,QAAO,SAAAH,GAAC,OAAS,GAALA,CAAU,IAC5CI,EAAO,EACFC,EAAI,EAAGA,EAAIV,EAAc7C,OAAQuD,IAAK,CAE3CD,GADgBT,EAAcU,GACRtF,MAAMgC,UAChC,CAUA,OACIZ,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,QAAUC,SAAA,EACtBC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,KAAOC,SAAA,EACnBjB,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,OAAUI,IAAKiE,EAAkB/D,IAAI,qBACrDtB,EAAAA,EAAAA,KAAA,OAAKe,UAAU,aAAYE,UACvBC,EAAAA,EAAAA,MAACoE,EAAAA,EAAI,CAACC,aAAa,UAAStE,SAAA,EACxBC,EAAAA,EAAAA,MAACoE,EAAAA,EAAAA,KAAS,CAACE,MAAI,EAAAvE,SAAA,EACXjB,EAAAA,EAAAA,KAACsF,EAAAA,EAAAA,IAAQ,CAAC1F,MAAM,UAASqB,SAAC,aAC1BjB,EAAAA,EAAAA,KAACsF,EAAAA,EAAAA,IAAQ,CAAC1F,MAAM,QAAOqB,SAAC,WACxBjB,EAAAA,EAAAA,KAACsF,EAAAA,EAAAA,IAAQ,CAAC1F,MAAM,OAAMqB,SAAC,UACvBjB,EAAAA,EAAAA,KAACsF,EAAAA,EAAAA,IAAQ,CAAC1F,MAAM,WAAUqB,SAAC,iBAE/BjB,EAAAA,EAAAA,KAACsF,EAAAA,EAAAA,MAAU,CAACG,GAAI,GAAI7F,MAAM,UAASqB,UAC/BC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,WAAaC,SAAA,EACzBjB,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,WAAaC,UACzBjB,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,OAAUI,IAAwC,OAAnCtB,EAAMsC,YAAYsD,OAAOC,MAAiBC,EAAO9F,EAAMsC,YAAYsD,OAAOC,MAAOrE,IAAI,cAExHJ,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,SAAWC,SAAA,EACvBjB,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,KAAOC,SAAEnB,EAAMsC,YAAYyD,YAC1C7F,EAAAA,EAAAA,KAAC8F,EAAa,CAAClC,UAAW9D,EAAM8D,UAAWK,UAAWnE,EAAMsC,YAAYE,OACrEuB,OAAQ/D,EAAMhB,KAAKgC,GAAI0B,OAAQ1C,EAAM0C,UACzCtB,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,WAAaC,SAAA,EACzBjB,EAAAA,EAAAA,KAAA,KAAGe,UAAWC,EAAAA,SAAWC,SAAC,aAC1BjB,EAAAA,EAAAA,KAAA,KAAGe,UAAWC,EAAAA,OAASC,SAAEkE,QAE7BjE,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,WAAaC,SAAA,EACzBjB,EAAAA,EAAAA,KAAA,KAAGe,UAAWC,EAAAA,SAAWC,SAAC,oBAC1BjB,EAAAA,EAAAA,KAAA,KAAGe,UAAWC,EAAAA,OAASC,SAAEyD,EAAc7C,eAG9C/B,EAAMsC,YAAYE,QAAUxC,EAAMhB,KAAKgC,KAAMI,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,UAAYC,SAAA,EACtEjB,EAAAA,EAAAA,KAAA,OAAKe,UAAU,uBAAsBE,UACjCjB,EAAAA,EAAAA,KAAA,UAAQe,UAAU,qBAAoBE,SAAC,oBAE3CjB,EAAAA,EAAAA,KAAA,OAAKe,UAAU,uBAAsBE,UACjCjB,EAAAA,EAAAA,KAAA,UAEIe,UAAc,qBAAoBkB,OAAA,IAAInC,EAAMsC,YAAY2D,UAAY/E,EAAAA,SAAYC,SAC/EnB,EAAMsC,YAAY2D,SAAW,cAAgB,iBAEtD/F,EAAAA,EAAAA,KAAA,OAAKe,UAAU,uBAAsBE,UACjCjB,EAAAA,EAAAA,KAAA,UAAQe,UAAU,qBAAoBE,SAAC,yBAKvDjB,EAAAA,EAAAA,KAACsF,EAAAA,EAAAA,MAAU,CAACG,GAAI,GAAI7F,MAAM,QAAOqB,SACE,OAA9BnB,EAAMsC,YAAY4D,SAAmBhG,EAAAA,EAAAA,KAAA,KAAGe,UAAWC,EAAAA,MAAQC,SAAC,+CAAgDC,EAAAA,EAAAA,MAAA,KAAGH,UAAWC,EAAAA,MAAQC,SAAA,CAAC,IAAEnB,EAAMsC,YAAY4D,cAE5JhG,EAAAA,EAAAA,KAACsF,EAAAA,EAAAA,MAAU,CAACG,GAAI,GAAI7F,MAAM,UAE1BI,EAAAA,EAAAA,KAACsF,EAAAA,EAAAA,MAAU,CAACG,GAAI,GAAI7F,MAAM,qBAOrCE,EAAMsC,YAAYE,SAAWxC,EAAMhB,KAAKgC,KACrCI,EAAAA,EAAAA,MAAA,QAAM+E,SAAU1B,GA/Db,SAACZ,GACZ7D,EAAMoG,QAAQpG,EAAMhB,KAAKgC,GAAIhB,EAAMsC,YAAYyD,SAAUxE,EAAQ,MAAOsC,EAAEwC,SAAU,GACpFvD,GACJ,IA4DoD7B,UAAU,2BAA0BE,SAAA,EACxEjB,EAAAA,EAAAA,KAACoG,EAAAA,GAAQjG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACkG,MAAa,OAAN7B,QAAM,IAANA,GAAgB,QAAVF,EAANE,EAAQ2B,gBAAQ,IAAA7B,OAAV,EAANA,EAAkBgC,QAASC,MAAM,aAAaC,KAAK,MAAS7D,EAAS,WAAY,CAAE8D,SAAU,wCAA+BC,UAAW,CAAE9G,MAAO,GAAI0G,QAAS,+BAA+B,IAAEtC,YAAY,aACvNjD,UAAU,0BACdf,EAAAA,EAAAA,KAAA,OAAKe,UAAU,uBAAsBE,UACjCjB,EAAAA,EAAAA,KAAA,SAAOJ,MAAO,OAAQ+G,KAAK,SAAS5F,UAAU,6BAG1Df,EAAAA,EAAAA,KAAA,OAAKe,UAAU,aAAYE,SACtByD,MAIjB,E,oBC7DA,GAAekC,E,QAAAA,KACX3H,EAAAA,EAAAA,KAlBoB,SAACJ,GACrB,MAAO,CACH+F,MAAO/F,EAAMgI,KAAKC,SAClB1E,YAAa2E,EAAgClI,GAC7CyD,OAAQyE,EAA2BlI,GACnCmI,mBAAmBC,EAAAA,EAAAA,IAAqBpI,GACxC2D,OAAQuE,EAA2BlI,GACnCgF,OAAOhF,EAAMC,KAAKgC,GAE1B,IAS2BoG,EAAAA,EAAAA,GAAA,CAEfhB,QAAAA,EAAAA,GACAiB,eAAAA,EAAAA,GACAC,gBAAAA,EAAAA,GACAC,UAAAA,EAAAA,GACAzD,UAAAA,EAAAA,IAAS,UACTsC,EAAAA,KAGRnH,EAAAA,EAXJ,EA7BoB,SAACe,GACjB,IAAMwH,GAASC,EAAAA,EAAAA,MACT5G,GAAWC,EAAAA,EAAAA,MAQjB,OAPA4G,EAAAA,EAAAA,YAAU,WACDF,EAAOxG,GAGRhB,EAAMqH,eAAeG,EAAOxG,IAF5BH,EAAS,YAAcb,EAAM+D,OAIrC,GAAG,CAACyD,EAAOxG,MACHd,EAAAA,EAAAA,KAACyH,GAAOtH,EAAAA,EAAAA,GAAA,GAAKL,GACzB,G,gLCtBO,IAAM4H,EAAgB,SAAC7I,GAC1B,OAAQA,EAAM8I,SAASC,QAC3B,EACaC,EAAc,SAAChJ,GACxB,OAAQA,EAAM8I,SAASG,QAC3B,EACaC,EAAgB,SAAClJ,GAC1B,OAAQA,EAAM8I,SAASK,UAC3B,EACaC,EAAgB,SAACpJ,GAC1B,OAAQA,EAAM8I,SAASO,UAC3B,EACaC,EAAgB,SAACtJ,GAC1B,OAAQA,EAAM8I,SAASS,UAC3B,EACanB,EAAuB,SAACpI,GACjC,OAAQA,EAAM8I,SAASX,iBAC3B,C,qBChBA,KAAgB,KAAO,mBAAmB,MAAQ,oBAAoB,OAAS,qBAAqB,OAAS,qBAAqB,KAAO,mBAAmB,KAAO,mBAAmB,WAAa,yBAAyB,WAAa,yBAAyB,OAAS,qBAAqB,WAAa,yBAAyB,SAAW,uBAAuB,iBAAmB,+BAA+B,YAAc,0BAA0B,KAAO,mBAAmB,SAAW,uBAAuB,MAAQ,oBAAoB,wBAA0B,sCAAsC,QAAU,sBAAsB,MAAQ,oBAAoB,aAAe,2BAA2B,QAAU,sBAAsB,WAAa,yBAAyB,QAAU,sBAAsB,SAAW,uBAAuB,SAAW,uBAAuB,KAAO,mBAAmB,QAAU,sBAAsB,QAAU,sB","sources":["components/common_components/hoc-components.jsx","components/posts/post.jsx","redux/profile-selectors.js","webpack://first_project/./src/components/profile/profile.module.css?5210","components/profile/profile-status.jsx","components/profile/profile.jsx","components/profile/profile-container.jsx","redux/subs-selectors.js","webpack://first_project/./src/components/posts/post.module.css?618d"],"sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst AuthRedirect = (Component) => {\r\n    return connect(mapStateToProps)(class extends React.Component {\r\n        render() {\r\n            if (this.props.auth.isAuth === false) {\r\n                return <Navigate to='/login' />\r\n            }\r\n            else { return <Component {...this.props} /> }\r\n        }\r\n    })\r\n}\r\nexport { AuthRedirect }","import s from './post.module.css'\r\nimport comment from './../../img/com_item.png'\r\nimport { connect } from 'react-redux';\r\nimport { openPost, like } from '../../redux/news-reducer';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { addToLikeList } from '../../redux/auth-reducer';\r\nconst Post = (props) => {\r\n    const navigate = useNavigate()\r\n    const openPostPage = () => {\r\n        navigate('/post/' + props.id)\r\n    }\r\n    const likePost = () => {\r\n        if (props.isAuth === true) {\r\n            props.like(props.id)\r\n            props.addToLikeList(props.id)\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.inner}>\r\n                <div onClick={openPostPage} className={s.header}>\r\n                    <div className={s.avatar}>\r\n                        <img src={props.avatar} alt=\"\" />\r\n                    </div>\r\n                    <div className={s.name}>\r\n                        {props.name}\r\n                    </div>\r\n                    <div className={s.date}>\r\n                        {props.time}\r\n                    </div>\r\n                </div>\r\n                <div onClick={openPostPage} className={s.post_image}>\r\n                    <img src={props.postimage} alt=\"\" />\r\n                </div>\r\n                <div className={s.text_block}>\r\n                    <p>{props.posttext}</p>\r\n                </div>\r\n                <div className={s.footer}>\r\n                    <div className={s.left_block}>\r\n                        <button onClick={openPostPage} className={s.comments}>\r\n                            <img src={comment} alt=\"\" />\r\n                        </button>\r\n                        <div className={s.comments_counter}>\r\n                            {props.comments.length}\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.right_block}>\r\n                        <div className={s.likes_dislikes__counter}>\r\n                            {props.like_count}\r\n                        </div>\r\n                        <div className={s.like}>\r\n                            <button disabled={props.likeList.some(id => id === props.id)} onClick={likePost} \r\n                            className={`${s.like_btn} ${props.likeList.some(id => id === props.id) && props.isAuth && s.liked}`}>❤</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        likeList: state.auth.likedPosts,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nconst PostContainer = connect(mapStateToProps, { openPost, addToLikeList, like })(Post)\r\nexport default PostContainer;","export const getPosts = (state) => {\r\n    return (state.profilePage.postData)\r\n}\r\nexport const getProfileInfo = (state) => {\r\n    return (state.profilePage.profileInfo)\r\n}\r\nexport const getUserId = (state) => {\r\n    return (state.profilePage.userId)\r\n}\r\nexport const getStatus = (state) => {\r\n    return (state.profilePage.status)\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"profile_header__snr11\",\"info_block\":\"profile_info_block__TGu4e\",\"avatar_box\":\"profile_avatar_box__8t5eI\",\"avatar\":\"profile_avatar__BXfiN\",\"info_inf\":\"profile_info_inf__vOAIu\",\"name\":\"profile_name__ncI3y\",\"desc_block\":\"profile_desc_block__yku1E\",\"question\":\"profile_question__B1dH0\",\"answer\":\"profile_answer__Lhy3q\",\"btn_block\":\"profile_btn_block__3VYyI\",\"f_color\":\"profile_f_color__zQfD4\",\"status_field\":\"profile_status_field__-HcwC\",\"status_input\":\"profile_status_input__i3snL\",\"pencil_box\":\"profile_pencil_box__i1eL3\",\"error\":\"profile_error__-ycDH\",\"about\":\"profile_about__fH4f9\"};","import React, { useEffect, useState } from 'react'\r\nimport pencil from './../../img/pencil.png'\r\nimport pencilColor from './../../img/pencil_color.png'\r\nimport s from './profile.module.css'\r\nimport { useForm } from 'react-hook-form'\r\nconst ProfileStatus = (props) => {\r\n\r\n    const { register, reset } = useForm()\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [pencilMode, setPencilMode] = useState(false)\r\n    // useEffect(()=>{\r\n    //     console.log(pencilMode)\r\n    // },[pencilMode])\r\n    const changeImage = (mode) => {\r\n        setPencilMode(mode)\r\n    }\r\n    const activateEditMode = (e) => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = (e) => {\r\n        setEditMode(false)\r\n        props.setStatus(props.authId, e.currentTarget.value)\r\n        reset()\r\n    }\r\n    return (\r\n        <div className={s.status_field}>\r\n            {!editMode ?\r\n                <div>\r\n                    <q>{props.status}</q>\r\n                </div> :\r\n                <form>\r\n                    <input {...register('status')} autoFocus onBlur={deactivateEditMode} maxLength={25} className={s.status_input} placeholder={props.status}></input>\r\n                </form>\r\n            }\r\n            {props.profileId === props.authId && <div className={s.pencil_box}>\r\n                <img onClick={activateEditMode}\r\n                    onMouseLeave={(e) => { changeImage(false) }} onMouseEnter={(e) => { changeImage(true) }}\r\n                    src={pencilMode ? pencilColor : pencil}\r\n                    alt=\"\" />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React, { useState } from 'react';\r\nimport profile_head_img from './../../img/profile_head.png'\r\nimport logo from './../../img/shit_icon.png'\r\nimport s from './profile.module.css'\r\nimport Post from './../posts/post'\r\nimport avatar from './../../img/shit_icon.png'\r\nimport ProfileStatus from './profile-status';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Tabs, Textarea } from '@mantine/core';\r\n\r\nconst Profile = (props) => {\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({ mode: 'onSubmit' });\r\n    let posts = [...props.posts].reverse().map(p => p.userId === props.profileInfo.userId && <Post postId={p.userId} key={p.id} id={p.id} name={p.name} avatar={p.avatar} time={p.time}\r\n        postimage={p.postimage} posttext={p.posttext} like_count={p.like_count} comments={p.comments} />\r\n    )\r\n    let filteredPosts = posts.filter(p => p != false)\r\n    let rait = 0\r\n    for (let i = 0; i < filteredPosts.length; i++) {\r\n        const element = filteredPosts[i];\r\n        rait = rait + element.props.like_count\r\n    }\r\n    // let userPosts = posts.filter(e => e.props.postId === props.profileInfo.userId)\r\n    // let onSubClick = (e) => {\r\n    //     e.preventDefault();\r\n    //     props.following(props.profileInfo.followed, props.profileInfo.userId)\r\n    // }\r\n    let onSubmit = (e) => {\r\n        props.addPost(props.auth.id, props.profileInfo.fullName, avatar, 'Now', e.postText, 0)\r\n        reset()\r\n    }\r\n    return (\r\n        <div className={s.profile}>\r\n            <div className={s.head}>\r\n                <img className={s.header} src={profile_head_img} alt='profile__header'></img>\r\n                <div className='page-block'>\r\n                    <Tabs defaultValue='Profile'>\r\n                        <Tabs.List grow>\r\n                            <Tabs.Tab value='Profile'>Profile</Tabs.Tab>\r\n                            <Tabs.Tab value='About'>About</Tabs.Tab>\r\n                            <Tabs.Tab value='Subs'>Subs</Tabs.Tab>\r\n                            <Tabs.Tab value='Comments'>Comments</Tabs.Tab>\r\n                        </Tabs.List>\r\n                        <Tabs.Panel pt={30} value='Profile'>\r\n                            <div className={s.info_block}>\r\n                                <div className={s.avatar_box}>\r\n                                    <img className={s.avatar} src={props.profileInfo.photos.large === null ? logo : props.profileInfo.photos.large} alt='avatar'></img>\r\n                                </div>\r\n                                <div className={s.info_inf}>\r\n                                    <div className={s.name}>{props.profileInfo.fullName}</div>\r\n                                    {<ProfileStatus setStatus={props.setStatus} profileId={props.profileInfo.userId}\r\n                                        authId={props.auth.id} status={props.status} />}\r\n                                    <div className={s.desc_block}>\r\n                                        <p className={s.question}>Rating:</p>\r\n                                        <p className={s.answer}>{rait}</p>\r\n                                    </div>\r\n                                    <div className={s.desc_block}>\r\n                                        <p className={s.question}>Posts Counter:</p>\r\n                                        <p className={s.answer}>{filteredPosts.length}</p>\r\n                                    </div>\r\n                                </div>\r\n                                {props.profileInfo.userId != props.auth.id && <div className={s.btn_block}>\r\n                                    <div className='quick-posting-btnbox'>\r\n                                        <button className='quick-posting__btn'>Send Message</button>\r\n                                    </div>\r\n                                    <div className='quick-posting-btnbox'>\r\n                                        <button\r\n                                            // disabled={props.subscribeProgress.some(id => id === props.profileInfo.userId)} onClick={onSubClick} \r\n                                            className={`${'quick-posting__btn'} ${props.profileInfo.followed && s.f_color}`}>\r\n                                            {props.profileInfo.followed ? 'Unsubscribe' : 'Subscribe'}</button>\r\n                                    </div>\r\n                                    <div className='quick-posting-btnbox'>\r\n                                        <button className='quick-posting__btn'>Show Subs</button>\r\n                                    </div>\r\n                                </div>}\r\n                            </div>\r\n                        </Tabs.Panel>\r\n                        <Tabs.Panel pt={30} value='About'>\r\n                            {props.profileInfo.aboutMe === null ? <p className={s.about}>\"There could be a description of me here\"</p> : <p className={s.about}> {props.profileInfo.aboutMe}</p>}\r\n                        </Tabs.Panel>\r\n                        <Tabs.Panel pt={30} value='Subs'>\r\n                        </Tabs.Panel>\r\n                        <Tabs.Panel pt={30} value='Comments'>\r\n                        </Tabs.Panel>\r\n                    </Tabs>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            {props.profileInfo.userId === props.auth.id &&\r\n                <form onSubmit={handleSubmit(onSubmit)} className='quick-posting page-block'>\r\n                    <Textarea error={errors?.postText?.message} label='Quick Post' size='xl' {...register(\"postText\", { required: \"✎ You must enter the text ⇒\", minLength: { value: 10, message: \"Min length is 10 symbols\" } })} placeholder='Enter Text'\r\n                        className='quick-posting-field' />\r\n                    <div className='quick-posting-btnbox'>\r\n                        <input value={'Post'} type='submit' className='quick-posting__btn' />\r\n                    </div>\r\n                </form>}\r\n            <div className=\"page-block\">\r\n                {filteredPosts}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;\r\n\r\n\r\n// const ProfilePage = (props) => {\r\n//     const userid = useParams()\r\n//     useEffect(() => {\r\n//         // if (!userid.id) {\r\n//         //     userid.id = props.userId;\r\n//         // }\r\n//         props.getUserProfile(userid.id);\r\n//     })\r\n//     return (<Profile {...props} />)\r\n// }","import { connect } from 'react-redux';\r\nimport { getUserProfile, setFollowedInfo, setStatus } from '../../redux/profile-reducer';\r\nimport { addPost } from '../../redux/news-reducer';\r\nimport { following } from \"../../redux/subs-reducer\"\r\nimport * as profileSelectors from \"../../redux/profile-selectors\"\r\nimport { getSubscribeProgress } from \"../../redux/subs-selectors\"\r\nimport Profile from './profile';\r\nimport React, { useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { AuthRedirect } from '../common_components/hoc-components';\r\nimport { compose } from 'redux';\r\nconst ProfilePage = (props) => {\r\n    const userid = useParams()\r\n    const navigate = useNavigate()\r\n    useEffect(() => {\r\n        if (!userid.id) {\r\n            navigate('/profile/' + props.authId)\r\n        } else {\r\n            props.getUserProfile(userid.id);\r\n        }\r\n    }, [userid.id])\r\n    return (<Profile {...props} />)\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.news.postData,\r\n        profileInfo: profileSelectors.getProfileInfo(state),\r\n        userId: profileSelectors.getUserId(state),\r\n        subscribeProgress: getSubscribeProgress(state),\r\n        status: profileSelectors.getStatus(state),\r\n        authId:state.auth.id\r\n    }\r\n}\r\n// export function withRouter(Children) {\r\n//     return (props) => {\r\n//         const match = { params: useParams() }\r\n//         return <Children {...props} match={match} />\r\n//     }\r\n// }\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            addPost,\r\n            getUserProfile,\r\n            setFollowedInfo,\r\n            following,\r\n            setStatus,\r\n            addPost\r\n        }),\r\n    // withRouter,\r\n    AuthRedirect,\r\n)(ProfilePage);","export const getUsersArray = (state) => {\r\n    return (state.subsPage.subsData)\r\n}\r\nexport const getPageSize = (state) => {\r\n    return (state.subsPage.pageSize)\r\n}\r\nexport const getPageNumber = (state) => {\r\n    return (state.subsPage.pageNumber)\r\n}\r\nexport const getTotalCount = (state) => {\r\n    return (state.subsPage.totalCount)\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return (state.subsPage.isFetching)\r\n}\r\nexport const getSubscribeProgress = (state) => {\r\n    return (state.subsPage.subscribeProgress)\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"post_post__asiHQ\",\"inner\":\"post_inner__RufdX\",\"header\":\"post_header__phl+T\",\"avatar\":\"post_avatar__+BbsT\",\"name\":\"post_name__KvdFH\",\"date\":\"post_date__qIppz\",\"post_image\":\"post_post_image__MST5Y\",\"text_block\":\"post_text_block__Du+nD\",\"footer\":\"post_footer__rfB7H\",\"left_block\":\"post_left_block__eIxAb\",\"comments\":\"post_comments__zxgqG\",\"comments_counter\":\"post_comments_counter__xp+v0\",\"right_block\":\"post_right_block__r3IM0\",\"like\":\"post_like__yg2vP\",\"like_btn\":\"post_like_btn__7AP2Y\",\"liked\":\"post_liked__y6FR7\",\"likes_dislikes__counter\":\"post_likes_dislikes__counter__IKD5D\",\"dislike\":\"post_dislike__QFkdu\",\"error\":\"post_error__3mtui\",\"comments_box\":\"post_comments_box__7QqfE\",\"comment\":\"post_comment__kRZ7y\",\"com_header\":\"post_com_header__vFAEC\",\"com_ava\":\"post_com_ava__imquc\",\"com_name\":\"post_com_name__dl1ed\",\"com_text\":\"post_com_text__Y9+ia\",\"form\":\"post_form__xSXDs\",\"textbox\":\"post_textbox__Lm8oe\",\"btn_box\":\"post_btn_box__2oN6i\"};"],"names":["mapStateToProps","state","auth","AuthRedirect","Component","connect","_React$Component","_inherits","_class","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","props","isAuth","_jsx","Navigate","to","_objectSpread","React","PostContainer","likeList","likedPosts","openPost","addToLikeList","like","navigate","useNavigate","openPostPage","id","className","s","children","_jsxs","onClick","src","avatar","alt","name","time","postimage","posttext","comment","comments","length","like_count","disabled","some","concat","getProfileInfo","profilePage","profileInfo","getUserId","userId","getStatus","status","_useForm","useForm","register","reset","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","_useState4","pencilMode","setPencilMode","changeImage","mode","autoFocus","onBlur","e","setStatus","authId","currentTarget","maxLength","placeholder","profileId","onMouseLeave","onMouseEnter","pencilColor","pencil","_errors$postText","handleSubmit","errors","formState","filteredPosts","_toConsumableArray","posts","reverse","map","p","Post","postId","filter","rait","i","profile_head_img","Tabs","defaultValue","grow","pt","photos","large","logo","fullName","ProfileStatus","followed","aboutMe","onSubmit","addPost","postText","Textarea","error","message","label","size","required","minLength","type","compose","news","postData","profileSelectors","subscribeProgress","getSubscribeProgress","_defineProperty","getUserProfile","setFollowedInfo","following","userid","useParams","useEffect","Profile","getUsersArray","subsPage","subsData","getPageSize","pageSize","getPageNumber","pageNumber","getTotalCount","totalCount","getIsFetching","isFetching"],"sourceRoot":""}