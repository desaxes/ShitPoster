{"version":3,"file":"static/js/310.1cf41dbf.chunk.js","mappings":"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","sources":["components/common_components/hoc-components.tsx","webpack://first_project/./src/components/messages/messages.module.css?2284","components/common_components/error.tsx","webpack://first_project/./src/components/chat/chat.module.css?354c","components/chat/messagebox/messagebox.tsx","components/chat/chat.tsx","webpack://first_project/./src/components/contact/contact.module.css?a575","components/contact/contact.tsx","components/messages/messages.tsx","components/messages/messages-container.tsx"],"sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { appStateType } from '../../redux/redux-store'\r\n\r\nconst mapStateToProps = (state: appStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\ntype props = {\r\n    isAuth: boolean\r\n}\r\nconst AuthRedirect = (Component: React.ComponentType<props>) => {\r\n    return connect(mapStateToProps)(function (props: props) {\r\n        if (props.isAuth === false) {\r\n            return <Navigate to='/ShitPoster/login' />\r\n        }\r\n        else { return <Component {...props} /> }\r\n    }\r\n    )\r\n}\r\nexport { AuthRedirect }","// extracted by mini-css-extract-plugin\nexport default {\"inner\":\"messages_inner__ZANfK\",\"contacts\":\"messages_contacts__OYCOT\",\"contact_list\":\"messages_contact_list__m6Dz4\",\"list_btn\":\"messages_list_btn__x6Xd9\"};","import React from 'react'\r\nimport s from './common.module.css'\r\n\r\nconst ErrorField = (props: { errorMessage: string|undefined }) => {\r\n    return (\r\n        <div>\r\n            <p className={s.error}>{props.errorMessage}</p>\r\n        </div>\r\n    )\r\n}\r\nexport { ErrorField }","// extracted by mini-css-extract-plugin\nexport default {\"chat_block\":\"chat_chat_block__KD7QV\",\"chat_window\":\"chat_chat_window__xDl-z\",\"text_box\":\"chat_text_box__n9fQq\"};","import s from './messagebox.module.css'\r\nimport React from 'react'\r\ntype MessageType = {\r\n    id: string\r\n    inout: string\r\n    text: string\r\n}\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    return (\r\n        <p className={`${s.message} ${props.inout}`}>\r\n            {props.text}\r\n        </p>\r\n    )\r\n}\r\ntype MessageboxProps = {\r\n    messages: MessagesType[]\r\n}\r\nconst Messagebox: React.FC<MessageboxProps> = (props) => {\r\n    let messages = props.messages.map(m => <Message key={m.id} id={m.id} inout={m.inout} text={m.text} />)\r\n    return (\r\n        <div>\r\n            <div className={s.dialog_name}>\r\n                <p>John</p>\r\n                <span>\"Online\"</span>\r\n            </div>\r\n            <div className={s.message_box}>\r\n                <div className={s.messages}>\r\n                    {messages}\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Messagebox;","import { ErrorField } from '../common_components/error';\r\nimport s from './chat.module.css'\r\nimport Messagebox from './messagebox/messagebox';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\ntype ChatProps = {\r\n    sendMessage: () => void\r\n    messages: MessagesType[]\r\n    authId: number\r\n}\r\nconst Chat: React.FC<ChatProps> = (props) => {\r\n    return (\r\n        <div className={s.chat_block}>\r\n            <div className=\"page-block\">\r\n                <div className={s.chat_window}>\r\n                    <Messagebox messages={props.messages} />\r\n                    <Mes_textbox authId={props.authId} sendMessage={props.sendMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\ntype TextboxProps = {\r\n    authId: number\r\n    sendMessage: (message: string, id: string) => void\r\n}\r\ntype FormValues = {\r\n    messageText: string\r\n}\r\n\r\nconst Mes_textbox: React.FC<TextboxProps> = (props) => {\r\n    const id = props.authId.toString()\r\n    const { register, reset, handleSubmit, formState: { errors } } = useForm<FormValues>()\r\n    const onSubmit = (e: any) => {\r\n        props.sendMessage(e.messageText, id);\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className={s.text_box}>\r\n            <textarea {...register('messageText', { required: \"✎ You must enter the text ⇒\" })}>\r\n            </textarea>\r\n            {errors?.messageText && <ErrorField errorMessage={errors?.messageText.message} />}\r\n            <div className='quick-posting-btnbox'>\r\n                <input value={'Send Message'} type='submit' className='quick-posting__btn' />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default Chat;","// extracted by mini-css-extract-plugin\nexport default {\"contact_avatar\":\"contact_contact_avatar__pVgGZ\",\"contact_item\":\"contact_contact_item__XZMu+\",\"contact_name\":\"contact_contact_name__byeTb\"};","import { NavLink } from 'react-router-dom';\r\nimport React from 'react'\r\nimport s from './contact.module.css'\r\n\r\n\r\nconst Contact: React.FC<DialogType> = (props) => {\r\n\r\n    return (\r\n        <NavLink to={'/messages/' + props.id}>\r\n            <div className={s.contact_item}>\r\n                {/* <div className={s.contact_avatar}>\r\n                    <img src={props.avatar} alt=\"\" />\r\n                </div> */}\r\n                <div className={s.contact_name}>\r\n                    <p>{props.name}</p>\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\nexport default Contact;","import React from 'react'\r\nimport s from './messages.module.css'\r\nimport Chat from '../chat/chat';\r\nimport Contact from '../contact/contact';\r\n\r\nconst Messages: React.FC<MessagesProps> = (props) => {\r\n    let contacts = props.contacts.map(c => <Contact key={c.id} id={c.id} name={c.name} />\r\n    )\r\n    return (\r\n        <div className={s.messages}>\r\n            <div className={s.inner}>\r\n                <div className={s.contacts}>\r\n                    <button className='quick-posting__btn'><p>CONTACTS</p></button>\r\n                    <ul className={s.contact_list}>\r\n                        {contacts}\r\n                    </ul>\r\n                </div>\r\n                <Chat authId={props.authId} messages={props.messages} sendMessage={props.sendMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Messages;","import { connect } from 'react-redux';\r\nimport { sendMessage } from '../../redux/messages-reducer';\r\nimport Messages from './messages'\r\nimport React from 'react';\r\nimport { AuthRedirect } from '../common_components/hoc-components';\r\nimport { compose } from 'redux';\r\nimport { appStateType } from '../../redux/redux-store.js';\r\n\r\nconst MessagesAPI: React.FC<MessagesProps> = (props) => {\r\n    return (\r\n        <Messages {...props} />\r\n    )\r\n}\r\nconst mapStateToProps = (state: appStateType) => {\r\n    return {\r\n        contacts: state.messagesPage.dialogsData,\r\n        messages: state.messagesPage.messagesData,\r\n        authId: state.auth.id\r\n    }\r\n}\r\nexport default compose<React.FC>(\r\n    connect(mapStateToProps,\r\n        {\r\n            sendMessage,\r\n        }),\r\n    AuthRedirect\r\n)(MessagesAPI);"],"names":["mapStateToProps","state","isAuth","auth","AuthRedirect","Component","connect","props","_jsx","Navigate","to","_objectSpread","ErrorField","children","className","s","errorMessage","Message","concat","inout","text","messages","map","m","id","_jsxs","Mes_textbox","authId","toString","_useForm","useForm","register","reset","handleSubmit","errors","formState","onSubmit","e","sendMessage","messageText","required","message","value","type","Messagebox","NavLink","name","contacts","c","Contact","Chat","compose","messagesPage","dialogsData","messagesData","Messages"],"sourceRoot":""}